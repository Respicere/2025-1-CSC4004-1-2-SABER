{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82102\\\\Downloads\\\\2025-1-CSC4004-1-2-SABER-main\\\\2025-1-CSC4004-1-2-SABER-main\\\\frontend\\\\src\\\\pages\\\\S3Uploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction S3Uploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  // 파일 선택 핸들러\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // 업로드 핸들러\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"파일을 선택해주세요!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:8080/api/files/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"업로드 실패\");\n      }\n\n      // 서버가 String 형태로 URL 반환한다고 가정\n      const url = await response.text();\n      setImageUrl(url);\n      alert(\"업로드 성공!\");\n    } catch (error) {\n      alert(\"업로드 중 오류 발생: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"S3 \\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: 10\n      },\n      children: \"\\uC5C5\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5C5\\uB85C\\uB4DC\\uB41C \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Uploaded\",\n        style: {\n          maxWidth: 300,\n          maxHeight: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(S3Uploader, \"y/rObql6tBoUDzf93SMKdyByF4o=\");\n_c = S3Uploader;\nexport default S3Uploader;\nvar _c;\n$RefreshReg$(_c, \"S3Uploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","S3Uploader","_s","file","setFile","imageUrl","setImageUrl","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","ok","Error","url","text","error","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginLeft","marginTop","src","alt","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/82102/Downloads/2025-1-CSC4004-1-2-SABER-main/2025-1-CSC4004-1-2-SABER-main/frontend/src/pages/S3Uploader.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction S3Uploader() {\n    const [file, setFile] = useState(null);\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n    // 파일 선택 핸들러\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    // 업로드 핸들러\n    const handleUpload = async () => {\n        if (!file) {\n            alert(\"파일을 선택해주세요!\");\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        try {\n            const response = await fetch(\"http://localhost:8080/api/files/upload\", {\n                method: \"POST\",\n                body: formData,\n            });\n\n            if (!response.ok) {\n                throw new Error(\"업로드 실패\");\n            }\n\n            // 서버가 String 형태로 URL 반환한다고 가정\n            const url = await response.text();\n            setImageUrl(url);\n            alert(\"업로드 성공!\");\n        } catch (error) {\n            alert(\"업로드 중 오류 발생: \" + error.message);\n        }\n    };\n\n    return (\n        <div style={{ padding: 20 }}>\n            <h2>S3 파일 업로드</h2>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={handleUpload} style={{ marginLeft: 10 }}>\n                업로드\n            </button>\n\n            {imageUrl && (\n                <div style={{ marginTop: 20 }}>\n                    <h3>업로드된 이미지</h3>\n                    <img\n                        src={imageUrl}\n                        alt=\"Uploaded\"\n                        style={{ maxWidth: 300, maxHeight: 300 }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default S3Uploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACPS,KAAK,CAAC,aAAa,CAAC;MACpB;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;MAC7B;;MAEA;MACA,MAAMC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACjCjB,WAAW,CAACgB,GAAG,CAAC;MAChBV,KAAK,CAAC,SAAS,CAAC;IACpB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZZ,KAAK,CAAC,eAAe,GAAGY,KAAK,CAACC,OAAO,CAAC;IAC1C;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAK0B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBACxB5B,OAAA;MAAA4B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE3B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDhC,OAAA;MAAQmC,OAAO,EAAExB,YAAa;MAACe,KAAK,EAAE;QAAEU,UAAU,EAAE;MAAG,CAAE;MAAAR,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAER3B,QAAQ,iBACLL,OAAA;MAAK0B,KAAK,EAAE;QAAEW,SAAS,EAAE;MAAG,CAAE;MAAAT,QAAA,gBAC1B5B,OAAA;QAAA4B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhC,OAAA;QACIsC,GAAG,EAAEjC,QAAS;QACdkC,GAAG,EAAC,UAAU;QACdb,KAAK,EAAE;UAAEc,QAAQ,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAI;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC9B,EAAA,CA1DQD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AA4DnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}