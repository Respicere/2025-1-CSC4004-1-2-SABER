{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82102\\\\Downloads\\\\2025-1-CSC4004-1-2-SABER-main\\\\2025-1-CSC4004-1-2-SABER-main\\\\frontend\\\\src\\\\pages\\\\SellerVerificationStart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport '../css/Sellers.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SellerVerificationStart() {\n  _s();\n  const [pendingIds, setPendingIds] = useState([]);\n  const [requirementText, setRequirementText] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const [verifications, setVerifications] = useState([]);\n  useEffect(() => {\n    // 실제 백엔드 대신 임시 세션 ID\n    const verificationLinkId = \"mockSession123\";\n    const fetchData = async () => {\n      try {\n        // ✅ 임시로 사용할 가짜 데이터\n        const fakePendingIds = [101, 102];\n        const fakeRequirementText = \"실명 확인 가능한 서류를 제출해주세요.\\n흐릿한 사진은 재요청될 수 있습니다.\";\n        const fakeVerifications = [{\n          id: 101,\n          label: \"신분증\"\n        }, {\n          id: 102,\n          label: \"통장 사본\"\n        }, {\n          id: 103,\n          label: \"사업자등록증\"\n        }];\n\n        // 상태 업데이트\n        setPendingIds(fakePendingIds);\n        setRequirementText(fakeRequirementText);\n        setVerifications(fakeVerifications);\n      } catch (err) {\n        console.error(\"데이터 불러오기 실패\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  {/*\n   useEffect(() => {\n      if (!isLoading && pendingIds.length === 0) {\n          const timeoutId = setTimeout(() => {\n              navigate('/seller/submit');\n          }, 5000);\n          return () => clearTimeout(timeoutId);\n      }\n   }, [pendingIds, isLoading, navigate]);\n   */}\n  const startVerification = id => {\n    axios.post(`http://localhost:8080/api/verification/${id}/start`).then(() => {\n      navigate(`/verifications/${id}/camera`);\n    }).catch(err => {\n      console.error(\"인증 시작 실패\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sellerText\",\n      children: \"\\uC778\\uC99D \\uC694\\uCCAD \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC778\\uC99D \\uC694\\uCCAD\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noticeContainer\",\n      children: requirementText && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sectionTitle\",\n          children: \"\\uCD94\\uAC00 \\uC694\\uCCAD \\uC0AC\\uD56D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: requirementText.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            className: \"subTitle\",\n            children: [\"- \", line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingIds.map(id => {\n        const verif = verifications.find(v => v.id === id);\n        const label = verif ? verif.label : \"알 수 없는 이름\";\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nextButton\",\n            onClick: () => startVerification(id),\n            children: [\"\\uC778\\uC99D \\uC2DC\\uC791 (\", label, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(SellerVerificationStart, \"NPr1dBA5OcJGo9vOt7tOcpGHgOo=\", false, function () {\n  return [useNavigate];\n});\n_c = SellerVerificationStart;\nexport default SellerVerificationStart;\nvar _c;\n$RefreshReg$(_c, \"SellerVerificationStart\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","SellerVerificationStart","_s","pendingIds","setPendingIds","requirementText","setRequirementText","message","setMessage","isLoading","setIsLoading","navigate","verifications","setVerifications","verificationLinkId","fetchData","fakePendingIds","fakeRequirementText","fakeVerifications","id","label","err","console","error","startVerification","post","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","line","index","Fragment","verif","find","v","onClick","_c","$RefreshReg$"],"sources":["C:/Users/82102/Downloads/2025-1-CSC4004-1-2-SABER-main/2025-1-CSC4004-1-2-SABER-main/frontend/src/pages/SellerVerificationStart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport '../css/Sellers.css';\n\nfunction SellerVerificationStart() {\n    const [pendingIds, setPendingIds] = useState([]);\n    const [requirementText, setRequirementText] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n    const [verifications, setVerifications] = useState([]);\n\n    useEffect(() => {\n    // 실제 백엔드 대신 임시 세션 ID\n    const verificationLinkId = \"mockSession123\";\n\n    const fetchData = async () => {\n        try {\n            // ✅ 임시로 사용할 가짜 데이터\n            const fakePendingIds = [101, 102];\n            const fakeRequirementText = \"실명 확인 가능한 서류를 제출해주세요.\\n흐릿한 사진은 재요청될 수 있습니다.\";\n            const fakeVerifications = [\n                { id: 101, label: \"신분증\" },\n                { id: 102, label: \"통장 사본\" },\n                { id: 103, label: \"사업자등록증\" },\n            ];\n\n            // 상태 업데이트\n            setPendingIds(fakePendingIds);\n            setRequirementText(fakeRequirementText);\n            setVerifications(fakeVerifications);\n        } catch (err) {\n            console.error(\"데이터 불러오기 실패\", err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    fetchData();\n}, []);\n    {/*\n    useEffect(() => {\n        if (!isLoading && pendingIds.length === 0) {\n            const timeoutId = setTimeout(() => {\n                navigate('/seller/submit');\n            }, 5000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [pendingIds, isLoading, navigate]);\n    */}\n    const startVerification = (id) => {\n        axios\n            .post(`http://localhost:8080/api/verification/${id}/start`)\n            .then(() => {\n                navigate(`/verifications/${id}/camera`);\n            })\n            .catch((err) => {\n                console.error(\"인증 시작 실패\", err);\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"sellerText\">인증 요청 목록</h1>\n\n            {isLoading && <p>인증 요청을 불러오는 중입니다...</p>}\n\n            {/*\n            {!isLoading && pendingIds.length === 0 && (\n                <p>모든 인증이 완료되었습니다. 5초 후 제출 페이지로 이동합니다.</p>\n            )}\n            */}\n\n            <div className=\"noticeContainer\">\n                {requirementText && (\n                    <div>\n                        <p className=\"sectionTitle\">추가 요청 사항</p>\n                        <p>\n                            {requirementText.split('\\n').map((line, index) => (\n                                <React.Fragment key={index} className=\"subTitle\">\n                                    - {line}\n                                    <br/>\n                                </React.Fragment>\n                            ))}\n                        </p>\n                    </div>\n                )}\n            </div>\n\n            <ul>\n                {pendingIds.map((id) => {\n                    const verif = verifications.find(v => v.id === id);\n                    const label = verif ? verif.label : \"알 수 없는 이름\";\n\n                    return (\n                        <li key={id}>\n                            <button\n                                className=\"nextButton\"\n                                onClick={() => startVerification(id)}\n                            >\n                                인증 시작 ({label})\n                            </button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n}\n\nexport default SellerVerificationStart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}